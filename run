# Resolve repo root as the directory where this script lives
REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Paths relative to repo root
GENERATOR_PY="$REPO_ROOT/src/run.py"
VENV_DIR="$REPO_ROOT/venv/bin/python"

# Run music video generator.
# Usage:
#   musicvideo [directory]
# If no directory is given, it uses the current directory.
musicvideo() {
  local dir="${1:-$PWD}"

  if [[ ! -d "$dir" ]]; then
    echo "error: '$dir' is not a directory" >&2
    return 1
  fi
  if [[ ! -f "$GENERATOR_PY" ]]; then
    echo "error: run.py not found at '$GENERATOR_PY'" >&2
    return 1
  fi

  # Ensure Python available
  local sys_py="$(command -v python3 || command -v python)"
  if [[ -z "$sys_py" ]]; then
    echo "error: couldn't find a system Python interpreter" >&2
    return 1
  fi

  # Bootstrap venv if missing
  if [[ ! -x "$VENV_DIR" ]]; then
    echo "‚öôÔ∏è  Creating virtual environment at $REPO_ROOT/venv..."
    "$sys_py" -m venv "$REPO_ROOT/venv" || {
      echo "error: failed to create venv" >&2
      return 1
    }
    source "$REPO_ROOT/venv/bin/activate"
    if [[ -f "$REPO_ROOT/requirements.txt" ]]; then
      echo "üì¶ Installing dependencies from requirements.txt..."
      pip install --upgrade pip setuptools wheel
      pip install -r "$REPO_ROOT/requirements.txt" || {
        echo "error: pip install failed" >&2
        deactivate
        return 1
      }
    else
      echo "‚ö†Ô∏è  No requirements.txt found in $REPO_ROOT"
    fi
  fi

  # Use venv python
  local py="$VENV_DIR"
  [[ -x "$py" ]] || py="$sys_py"

  "$py" "$GENERATOR_PY" "$dir"
}

# Optional: tab-complete directories for the first arg
_comp_musicvideo() {
  _files -/
}
compdef _comp_musicvideo musicvideo

